<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.FoodDao">
  <resultMap id="BaseResultMap" type="com.example.model.Food">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="discount" jdbcType="VARCHAR" property="discount" />
    <result column="count" jdbcType="VARCHAR" property="count" />
    <result column="kind" jdbcType="VARCHAR" property="kind" />
  </resultMap>
  <select id="SelectFood" resultType="Food" parameterType="String">
    select * from food
  </select>
  <insert id="insert" parameterType="com.example.model.Food">
    <selectKey keyProperty="name" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into food (name,url, price, discount,
      count, kind)
    values (#{name,jdbcType=VARCHAR},#{url,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, #{discount,jdbcType=VARCHAR},
      #{count,jdbcType=VARCHAR}, #{kind,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.Food">
    <selectKey keyProperty="name" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into food
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="url != null">
        url,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="kind != null">
        kind,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=VARCHAR},
      </if>
      <if test="kind != null">
        #{kind,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <delete id="deleteById" parameterType="String">
    delete from food where
    id=#{id}
  </delete>
  <update id="updateById" parameterType="com.example.model.Food">
    update food
    <set>
      <if test="name != null">
        name=#{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url=#{url,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price=#{price,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        discount=#{discount,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count=#{count,jdbcType=VARCHAR},
      </if>
      <if test="kind != null">
        kind=#{kind,jdbcType=VARCHAR},
      </if>
    </set>
    where id=#{id,jdbcType=INTEGER}
  </update>
  <select id="search" parameterType="String" resultType="com.example.model.Food">
    select * from food where 1=1
      and name like concat(concat("%",#{name}),"%")

  </select>
  <select id="searchByKind" parameterType="String" resultType="java.lang.Integer">
    select count(*) from food where 1=1
    and kind =#{kind}
  </select>
  <select id="selectByKind" parameterType="String" resultType="com.example.model.Food">
    select * from food where 1=1
    and kind =#{kind}
  </select>
  <select id="searchById" parameterType="INTEGER" resultType="com.example.model.Food">
    select * from  food where id=#{id}
  </select>
  <update id="jkc" parameterType="com.example.model.Food">
    update food
    set count=#{count}
    where id=#{id}
  </update>
</mapper>