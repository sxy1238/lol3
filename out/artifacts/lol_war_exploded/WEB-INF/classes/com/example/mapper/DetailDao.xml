<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.DetailDao">
  <resultMap id="BaseResultMap" type="com.example.model.Detail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderid" jdbcType="INTEGER" property="orderid" />
    <result column="foodid" jdbcType="INTEGER" property="foodid" />
    <result column="count" jdbcType="VARCHAR" property="count" />
    <result column="price" jdbcType="VARCHAR" property="price" />
  </resultMap>
  <sql id="Base_Column_List">
    id, orderid, foodid, count,price
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="ReadOrder" parameterType="Integer" resultType="Detail">
    select * from detail where orderid=#{orderid}
  </select>
  <select id="tuijian" parameterType="String" resultType="Integer">
    select DISTINCT foodid from detail where orderid in
    (SELECT orderid FROM `order` WHERE userid=#{userid})
    ORDER BY count
     desc LIMIT 3
  </select>
  <select id="searchByFood" parameterType="Integer" resultType="java.lang.Integer">
    select count(*) from detail where 1=1
    and foodid =#{foodid}
  </select>
  <select id="bb" parameterType="Integer" resultType="Detail">
    select * from detail where foodid=#{foodid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.model.Detail">
    insert into detail (orderid, foodid,
      count,price)
    values (#{orderid,jdbcType=INTEGER}, #{foodid,jdbcType=INTEGER},
      #{count,jdbcType=VARCHAR},#{price,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.Detail">
    insert into detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderid != null">
        orderid,
      </if>
      <if test="foodid != null">
        foodid,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="foodid != null">
        #{foodid,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.Detail">
    update detail
    <set>
      <if test="orderid != null">
        orderid = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="foodid != null">
        foodid = #{foodid,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.Detail">
    update detail
    set orderid = #{orderid,jdbcType=INTEGER},
      foodid = #{foodid,jdbcType=INTEGER},
      count = #{count,jdbcType=VARCHAR},
       price = #{price,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>